

import '../../view/camera scanner/camera_scan_screen.dart';
import '../../view/home screen/home_screen.dart';
import '../urls.dart';

class NavigationScreen extends StatefulWidget {
  const NavigationScreen({super.key});

  @override
  _NavigationScreenState createState() => _NavigationScreenState();
}

class _NavigationScreenState extends State<NavigationScreen> {
  int _selectedIndex = 0;

  final List<Widget> _pages = [
    HomeScreen(),
    const SearchPage(),
    const CameraPage(), // Placeholder for the camera screen
    const ListPage(),
    const DashboardScreen(),
  ];

  void _onItemTapped(int index) {
    if (index == 2) {
      _openCameraOrGallery(context);
    } else {
      setState(() {
        _selectedIndex = index;
      });
    }
  }

  Future<void> _openCameraOrGallery(BuildContext context) async {
    final ImagePicker picker = ImagePicker();

    showModalBottomSheet(
      context: context,
      builder: (BuildContext context) {
        return Container(
          padding: const EdgeInsets.all(15),
          height: Get.height * .2,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              Text('Choose Option', style: GoogleFonts.poppins(fontWeight: FontWeight.w600, fontSize: 18)),
              SizedBox(height: Get.height * .01),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceAround,
                children: [
                  Column(
                    children: [
                      Container(
                        decoration: BoxDecoration(border: Border.all(width: 0.5), borderRadius: BorderRadius.circular(30)),
                        child: IconButton(
                          icon: const Icon(Icons.camera_alt, size: 40),
                          onPressed: () async {
                            final cameras = await availableCameras();
                            final firstCamera = cameras.first;

                            Get.back();
                            Get.to(() => CameraScanScreen(camera: firstCamera));
                          },
                        ),
                      ),
                      Text('Camera', style: GoogleFonts.poppins(fontWeight: FontWeight.w500))
                    ],
                  ),
                  Column(
                    children: [
                      Container(
                        decoration: BoxDecoration(border: Border.all(width: 0.5), borderRadius: BorderRadius.circular(30)),
                        child: IconButton(
                          icon: const Icon(Icons.photo, size: 40),
                          onPressed: () async {
                            final pickedFile = await picker.pickImage(source: ImageSource.gallery);
                            if (pickedFile != null) {
                              Get.back();
                              Get.to(() => ImageDetailsScreen(imagePath: pickedFile.path));
                            }
                          },
                        ),
                      ),
                      Text('Gallery', style: GoogleFonts.poppins(fontWeight: FontWeight.w500))
                    ],
                  ),
                ],
              ),
            ],
          ),
        );
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: _pages[_selectedIndex],
      bottomNavigationBar: ClipRRect(
        borderRadius: const BorderRadius.only(
          topLeft: Radius.circular(25),
          topRight: Radius.circular(25),
        ),
        child: BottomNavigationBar(
          elevation: 0, // Remove shadow
          items: [
            BottomNavigationBarItem(
                icon: CustomIcon(
                    icon: Icons.home, index: 0, selectedIndex: _selectedIndex),
                label: ''),
            BottomNavigationBarItem(
                icon: CustomIcon(
                    icon: Icons.search,
                    index: 1,
                    selectedIndex: _selectedIndex),
                label: ''),
            BottomNavigationBarItem(
                icon: _selectedIndex == 2
                    ? const Icon(Icons.camera_alt,
                    size: 24, // Decrease size
                    color: Colors.blue)
                    : const Padding(
                  padding: EdgeInsets.symmetric(horizontal: 8.0),
                  child: Icon(Icons.camera_alt, size: 24),
                ),
                label: ''),
            BottomNavigationBarItem(
                icon: CustomIcon(
                    icon: Icons.list, index: 3, selectedIndex: _selectedIndex),
                label: ''),
            BottomNavigationBarItem(
                icon: CustomIcon(
                    icon: Icons.person,
                    index: 4,
                    selectedIndex: _selectedIndex),
                label: ''),
          ],
          currentIndex: _selectedIndex,
          onTap: _onItemTapped,
          selectedItemColor: Colors.yellowAccent,
          unselectedItemColor: Colors.black,
          iconSize: 24,
          type: BottomNavigationBarType.fixed,
          backgroundColor: Colors.white,
          // Optionally, adjust padding and layout
          selectedLabelStyle:
          const TextStyle(fontSize: 0), // Hide label if needed
          unselectedLabelStyle:
          const TextStyle(fontSize: 0), // Hide label if needed
        ),
      ),
    );
  }
}

class CustomIcon extends StatelessWidget {
  final IconData icon;
  final int index;
  final int selectedIndex;

  const CustomIcon(
      {super.key, required this.icon, required this.index, required this.selectedIndex});

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.only(top: 12.0),
      child: Icon(
        icon,
        size: index == selectedIndex ? 20 : 20,
      ),
    );
  }
}

class SearchPage extends StatelessWidget {
  const SearchPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Container(
      color: Colors.white,
      child: const Center(child: Text('Search Page')),
    );
  }
}

class CameraPage extends StatelessWidget {
  const CameraPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Container(
      color: Colors.white,
      child: const Center(child: Text('Camera Page')),
    );
  }
}

class ListPage extends StatelessWidget {
  const ListPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Container(
      color: Colors.white,
      child: const Center(child: Text('List Page', style: TextStyle(color: Colors.red),)),
    );
  }
}

class ProfilePage extends StatelessWidget {
  const ProfilePage({super.key});

  @override
  Widget build(BuildContext context) {
    return Container(
      color: Colors.white,
      child: const Center(child: Text('Profile Page')),
    );
  }
}
